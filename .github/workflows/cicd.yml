name: CI/CD
on:
    push:
        branches:
            - dev
            - main
jobs:
    CI:
        runs-on: ubuntu-latest
        outputs:
          tag: ${{steps.tag.outputs.tag}}
        steps:

            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Get Tags
              id: tag
              run: |
                tag=$(bash .github/scripts/getTag.sh)
                echo "tag $tag"
                echo tag=$tag >> $GITHUB_OUTPUT
              
            - name: Setup Java Environment
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: '17'
                cache: 'maven'

            - name: Build and UnitTest
              run: |
                ./mvnw versions:set -DnewVersion=${{steps.tag.outputs.tag}}
                ./mvnw verify

            - name: Package
              run: |
                ./mvnw package -Dmaven.test.skip=true -Dquarkus.package.type=legacy-jar
                sleep 10
                docker build -f src/main/docker/Dockerfile.legacy-jar -t quarkus/test-legacy-jar:v${{steps.tag.outputs.tag}} .

            - name: Test
              run: |
                docker network create quarkus
                docker run -dp 8080:8080 --network quarkus --name quarkus-test quarkus/test-legacy-jar:v${{steps.tag.outputs.tag}}
                sleep 5
                echo "testing container ..."
                docker logs quarkus-test | grep "Listening on: http://0.0.0.0:8080" && echo server running || echo server not running
                docker exec quarkus-test curl $(docker inspect quarkus-test | grep IPAddress | grep -Eo "[0-9.]{7,15}"):8080
                echo "testing dev server ..."
                curl http://localhost:8080

            - name: Publish
              run: |
                aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 522986700920.dkr.ecr.eu-west-1.amazonaws.com
                docker tag quarkus/test-legacy-jar:v${{steps.tag.outputs.tag}} 522986700920.dkr.ecr.eu-west-1.amazonaws.com/quarkus:v${{steps.tag.outputs.tag}}
                docker push 522986700920.dkr.ecr.eu-west-1.amazonaws.com/quarkus:v${{steps.tag.outputs.tag}}
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    CD:
        runs-on: ubuntu-latest
        needs: [CI]
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        steps:

            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Deploy
              uses: appleboy/ssh-action@v0.1.10
              with:
                host: ${{ vars.QUARKUS_HOST }}
                username: ${{ secrets.QUARKUS_USER }}
                key: ${{ secrets.SSH_PRIVATE_KEY }}
                script: |
                  aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 522986700920.dkr.ecr.eu-west-1.amazonaws.com
                  docker rm -f quarkus
                  sleep 5 
                  docker ps
                  sleep 5
                  docker run -dp 80:8080 --name quarkus 522986700920.dkr.ecr.eu-west-1.amazonaws.com/quarkus:v${{needs.CI.outputs.tag}}
                  sleep 5
                  docker ps

            - name: E2E
              run: |
                curl http://${{ vars.QUARKUS_HOST }}

            - name: Clean repo
              run: git clean -f
        
            - name: Create and push tag
              run: |
                git tag ${{needs.CI.outputs.tag}} || echo "tag already exists"
                git push --tags
              env:
                repo-token: "${{ secrets.GITHUB_TOKEN }}"

    Report:
        runs-on: ubuntu-latest
        needs: [CI, CD]
        steps:
              - name: Report to Slack
                id: slack
                uses: slackapi/slack-github-action@v1.24.0
                with:
                  payload: |
                    {
                      "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                      "blocks": [
                        {
                          "type": "section",
                          "text": {
                            "type": "mrkdwn",
                            "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                          }
                        }
                      ]
                    }
                env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
                  SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK